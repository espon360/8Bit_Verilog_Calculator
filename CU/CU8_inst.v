// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 22.1 (Build Build 917 02/14/2023)
// Created on Fri Apr 26 09:34:06 2024

CU8 CU8_inst
(
	.value(value_sig) ,	// input [3:0] value_sig
	.trig(trig_sig) ,	// input  trig_sig
	.clearEntry(clearEntry_sig) ,	// input  clearEntry_sig
	.clearAll(clearAll_sig) ,	// input  clearAll_sig
	.clk(clk_sig) ,	// input  clk_sig
	.edgedetect(edgedetect_sig) ,	// output  edgedetect_sig
	.reset(reset_sig) ,	// output  reset_sig
	.loadA(loadA_sig) ,	// output  loadA_sig
	.loadB(loadB_sig) ,	// output  loadB_sig
	.operation(operation_sig) ,	// output  operation_sig
	.loadR(loadR_sig) ,	// output  loadR_sig
	.IUAU(IUAU_sig) 	// output  IUAU_sig
);

defparam CU8_inst.enter = 'b1111;
defparam CU8_inst.add = 'b1010;
defparam CU8_inst.subtract = 'b1011;
